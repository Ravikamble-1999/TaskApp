{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","App","useState","Date","startDate","setStartDate","classes","className","selected","onChange","date","options","isObject","TextField","field","id","label","type","defaultValue","InputLabelProps","shrink","inputProps","step","class","for","Button","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,SA0FIC,MAtFf,WAAgB,IAAD,EACqBC,mBAAS,IAAIC,MADlC,mBACNC,EADM,KACKC,EADL,KAIPC,EAAUhB,IAEhB,OACE,qBAAKiB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,gDACA,oBAAIA,UAAU,QAAd,SACE,kEAEF,iCACE,iDAEA,cAAC,IAAD,CACEC,SAAUJ,EACVK,SAAU,SAACC,GAAD,OAAUL,EAAaK,MAEnC,uBACA,yDACA,cAAC,cAAD,CAAaH,UAAU,cAAcI,QApBjC,CAAC,OAAQ,QAAS,UAoB6BC,UAAU,IAC7D,uBACA,mDACA,cAAC,cAAD,CACEL,UAAU,cACVI,QAxBI,CAAC,8BAyBLC,UAAU,IAEZ,uBACA,cAACC,EAAA,EAAD,CACEN,UAAWD,EAAQb,UACnBqB,OAAK,EACLC,GAAG,OACHC,MAAM,sBACNC,KAAK,OACLC,aAAa,QACbC,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,OAGV,uBACA,cAACT,EAAA,EAAD,CACEN,UAAWD,EAAQb,UACnBsB,GAAG,OACHC,MAAM,oBACNC,KAAK,OACLC,aAAa,QACbC,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVC,KAAM,OAGV,uBACA,gEACA,sBAAKC,MAAM,oBAAX,UACE,uBAAON,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,eACA,uBAAOP,KAAK,WAAWF,GAAG,cAAcQ,MAAM,YAC9C,uBAAOC,IAAI,cAAX,qBAGJ,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,yBCvFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b2003db1.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const [startDate, setStartDate] = useState(new Date());\n  const set = [\"None\", \"Daily\", \"Weekly\"];\n  const shift = [\"Morning Shift - 5am to 9am\"];\n  const classes = useStyles();\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__form\">\n        <h3 className=\"head\"> Select Start Date and Shift Times</h3>\n        <h4 className=\"small\">\n          <small>each row represents a shift</small>\n        </h4>\n        <form>\n          <label>Start Date :</label>\n\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n          />\n          <br />\n          <label>Select Repeat Type :</label>\n          <Multiselect className=\"multiselect\" options={set} isObject={false} />\n          <br />\n          <label>Select Shift :</label>\n          <Multiselect\n            className=\"multiselect\"\n            options={shift}\n            isObject={false}\n          />\n          <br />\n          <TextField\n            className={classes.container}\n            field\n            id=\"time\"\n            label=\"Select Start Time :\"\n            type=\"time\"\n            defaultValue=\"00:00\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputProps={{\n              step: 300,\n            }}\n          />\n          <br />\n          <TextField\n            className={classes.container}\n            id=\"time\"\n            label=\"Select End Time :\"\n            type=\"time\"\n            defaultValue=\"00:00\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputProps={{\n              step: 300,\n            }}\n          />\n          <br />\n          <label>Select Your Suitable Days :</label>\n          <div class=\"weekDays-selector\">\n            <input type=\"checkbox\" id=\"weekday-mon\" class=\"weekday\" />\n            <label for=\"weekday-mon\">M</label>\n            <input type=\"checkbox\" id=\"weekday-tue\" class=\"weekday\" />\n            <label for=\"weekday-tue\">T</label>\n            <input type=\"checkbox\" id=\"weekday-wed\" class=\"weekday\" />\n            <label for=\"weekday-wed\">W</label>\n            <input type=\"checkbox\" id=\"weekday-thu\" class=\"weekday\" />\n            <label for=\"weekday-thu\">T</label>\n            <input type=\"checkbox\" id=\"weekday-fri\" class=\"weekday\" />\n            <label for=\"weekday-fri\">F</label>\n            <input type=\"checkbox\" id=\"weekday-sat\" class=\"weekday\" />\n            <label for=\"weekday-sat\">S</label>\n            <input type=\"checkbox\" id=\"weekday-sun\" class=\"weekday\" />\n            <label for=\"weekday-sun\">S</label>\n          </div>\n        </form>\n        <Button variant=\"contained\" color=\"primary\">\n          Add +\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}